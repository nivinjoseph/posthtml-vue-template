{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,yBAAyB;AAGzB,MAAM,CAAC,OAAO,GAAG;IAEb,MAAM,CAAC,CAAC,IAAgB,EAAE,EAAE;QAExB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YACvD,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAElE,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC;QACnD,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;YACxC,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;QAE1D,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QACzB,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAE3C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC3B,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAEhF,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9B,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAEvC,IAAI,OAAO,GAAG;YACV,GAAG,EAAE,QAAQ;YACb,KAAK,EAAE;gBACH,IAAI,EAAE,iBAAiB;gBACvB,EAAE,EAAE,OAAO;aACd;YACD,OAAO,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC;SACrC,CAAC;QAEF,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC;YACpB,IAAI,CAAC,GAAG,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["import * as Os from \"os\";\n\n\nmodule.exports = function postHtmlViewTemplatePlugin()\n{\n    return (tree: Array<any>) =>\n    {\n        if (tree.length === 0)\n            throw new Error(\"DOM tree cannot be empty\");\n\n        if (tree.filter(t => typeof (t) === \"object\").length !== 1)\n            throw new Error(\"DOM tree does not contain one root element\");\n\n        let root = tree.find(t => typeof (t) === \"object\");\n        let classes: string = root.attrs.class;\n        if (!classes || classes.trim().length === 0)\n            throw new Error(\"DOM tree root element has no class\");\n\n        classes = classes.trim();\n        if (classes.indexOf(\" \") !== -1)\n            classes = classes.split(\" \")[0].trim();\n\n        if (!classes.endsWith(\"-view\"))\n            throw new Error(\"DOM tree root element's first class is not not view name\");\n\n        while (classes.indexOf(\"-\") !== -1)\n            classes = classes.replace(\"-\", \"\");    \n        \n        let wrapper = {\n            tag: \"script\",\n            attrs: {\n                type: \"text/x-template\",\n                id: classes,\n            },\n            content: [Os.EOL, ...tree, Os.EOL]\n        };\n\n        while (tree.length !== 0)\n            tree.pop();\n        \n        tree.push(wrapper);\n        return tree;\n    };\n};"]}