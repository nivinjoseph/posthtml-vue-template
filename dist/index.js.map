{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAAA,6CAAmD;AACnD,iBAAe;AAGf,MAAM,CAAC,OAAO,GAAG;IAEb,MAAM,CAAC,CAAC,IAAgB,EAAE,EAAE;QAExB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;YAClB,MAAM,IAAI,kCAAoB,CAAC,0BAA0B,CAAC,CAAC;QAE/D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC/C,MAAM,IAAI,kCAAoB,CAAC,4CAA4C,CAAC,CAAC;QAEjF,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC;QACnD,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,mBAAmB,EAAE,CAAC;YAC1C,MAAM,IAAI,kCAAoB,CAAC,oCAAoC,CAAC,CAAC;QAEzE,OAAO,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QACzB,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACtB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAE3C,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC3B,MAAM,IAAI,kCAAoB,CAAC,0DAA0D,CAAC,CAAC;QAE/F,IAAI,OAAO,GAAG;YACV,GAAG,EAAE,QAAQ;YACb,KAAK,EAAE;gBACH,IAAI,EAAE,iBAAiB;gBACvB,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,CAAC;aAClC;YACD,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC;SACrB,CAAC;QAEF,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["import { ApplicationException } from \"n-exception\";\nimport \"n-ext\";\n\n\nmodule.exports = function postHtmlViewTemplatePlugin()\n{\n    return (tree: Array<any>) =>\n    {\n        if (tree.length === 0)\n            throw new ApplicationException(\"DOM tree cannot be empty\");\n\n        if (tree.count(t => typeof (t) === \"object\") !== 1)\n            throw new ApplicationException(\"DOM tree does not contain one root element\");\n\n        let root = tree.find(t => typeof (t) === \"object\");\n        let classes: string = root.attrs.class;\n        if (!classes || classes.isEmptyOrWhiteSpace())\n            throw new ApplicationException(\"DOM tree root element has no class\");\n\n        classes = classes.trim();\n        if (classes.contains(\" \"))\n            classes = classes.split(\" \")[0].trim();\n\n        if (!classes.endsWith(\"-view\"))\n            throw new ApplicationException(\"DOM tree root element's first class is not not view name\");\n\n        let wrapper = {\n            tag: \"script\",\n            attrs: {\n                type: \"text/x-template\",\n                id: classes.replaceAll(\"-\", \"\"),\n            },\n            content: [...tree]\n        };\n\n        tree.clear();\n        tree.push(wrapper);\n        return tree;\n    };\n};"]}